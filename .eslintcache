[{"E:\\Gitee\\file-view\\src\\index.js":"1","E:\\Gitee\\file-view\\src\\App.js":"2","E:\\Gitee\\file-view\\src\\reportWebVitals.js":"3","E:\\Gitee\\file-view\\src\\components\\Navbar.js":"4","E:\\Gitee\\file-view\\src\\components\\Body.js":"5","E:\\Gitee\\file-view\\src\\components\\FileDirectory.js":"6","E:\\Gitee\\file-view\\src\\components\\FileList.js":"7","E:\\Gitee\\file-view\\src\\components\\File.js":"8","E:\\Gitee\\file-view\\src\\redux\\store.js":"9","E:\\Gitee\\file-view\\src\\redux\\reducers.js":"10","E:\\Gitee\\file-view\\src\\redux\\action-types.js":"11","E:\\Gitee\\file-view\\src\\redux\\actions.js":"12","E:\\Gitee\\file-view\\src\\api\\api.js":"13","E:\\Gitee\\file-view\\src\\api\\req.js":"14","E:\\Gitee\\file-view\\src\\Path.js":"15","E:\\Gitee\\file-view\\src\\config.js":"16"},{"size":648,"mtime":1607219073542,"results":"17","hashOfConfig":"18"},{"size":576,"mtime":1607265764666,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":1280,"mtime":1607409734191,"results":"21","hashOfConfig":"18"},{"size":214,"mtime":1607264238552,"results":"22","hashOfConfig":"18"},{"size":1025,"mtime":1607266763913,"results":"23","hashOfConfig":"18"},{"size":510,"mtime":1607264128206,"results":"24","hashOfConfig":"18"},{"size":2129,"mtime":1607410236801,"results":"25","hashOfConfig":"18"},{"size":351,"mtime":1607221343756,"results":"26","hashOfConfig":"18"},{"size":580,"mtime":1607271228996,"results":"27","hashOfConfig":"18"},{"size":114,"mtime":1607268341955,"results":"28","hashOfConfig":"18"},{"size":1156,"mtime":1607271445695,"results":"29","hashOfConfig":"18"},{"size":200,"mtime":1607221396231,"results":"30","hashOfConfig":"18"},{"size":1014,"mtime":1607219819397,"results":"31","hashOfConfig":"18"},{"size":751,"mtime":1607271602788,"results":"32","hashOfConfig":"18"},{"size":58,"mtime":1607410257226,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"tjr0vg",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Gitee\\file-view\\src\\index.js",[],["70","71"],"E:\\Gitee\\file-view\\src\\App.js",[],"E:\\Gitee\\file-view\\src\\reportWebVitals.js",[],"E:\\Gitee\\file-view\\src\\components\\Navbar.js",["72","73"],"import React, { Component } from 'react'\r\nimport { Breadcrumb, Button } from 'antd'\r\nimport './Navbar.css'\r\nimport { connect } from 'react-redux'\r\nimport { backAsync, getFileListAsync } from '../redux/actions'\r\nimport { Path } from '../Path'\r\n\r\nclass Navbar extends Component {\r\n\r\n  handleBack = ()=> {\r\n    let path = this.props.path\r\n    this.props.backAsync(path)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"Navbar\">\r\n        <div className=\"left\">\r\n          <div>\r\n            <Button primary onClick={this.handleBack}>Back</Button>\r\n          </div>\r\n          {/*<Breadcrumb style={{color: 'white'}}>*/}\r\n          {/*  <Breadcrumb.Item key={'first-node'} style={{color: 'white'}}>/</Breadcrumb.Item>*/}\r\n          {/*  {*/}\r\n          {/*    this.props.path.node.map((item, index) => <Breadcrumb.Item key={index} style={{color: 'white'}}>{item}</Breadcrumb.Item>)*/}\r\n          {/*  }*/}\r\n          {/*</Breadcrumb>*/}\r\n          <div>\r\n            {this.props.path.length > 0 ? this.props.path : '/'}\r\n          </div>\r\n        </div>\r\n        <div className=\"right\">\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNavbar = connect(\r\n  state => ({\r\n    path: state['Explorer'].path\r\n  }),\r\n  { backAsync, getFileListAsync }\r\n)(Navbar)\r\n\r\nexport { Navbar }","E:\\Gitee\\file-view\\src\\components\\Body.js",[],"E:\\Gitee\\file-view\\src\\components\\FileDirectory.js",["74","75"],"import React from 'react'\r\nimport { Tree } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getFileListAsync, openFolder } from '../redux/actions'\r\n\r\nfunction convert (data) {\r\n  let count = 0\r\n}\r\n\r\nclass FileDirectory extends React.Component {\r\n\r\n\r\n  componentDidMount () {\r\n    this.props.getFileListAsync(this.props.path)\r\n  }\r\n\r\n  handleSelect = e => {\r\n    let folder = e[0]\r\n    console.log(folder)\r\n    this.props.openFolder(folder)\r\n    this.props.getFileListAsync(folder)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"FileDirectory\">\r\n        <Tree treeData={this.props.fileTree} onSelect={this.handleSelect}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nFileDirectory.propTypes = {\r\n  fileTree: PropTypes.any\r\n}\r\n\r\nFileDirectory = connect(\r\n  state =>{\r\n    let { fileTree, path } = state['Explorer']\r\n    path = path.toString()\r\n    return {\r\n      fileTree,\r\n      path\r\n    }\r\n  },\r\n  { getFileListAsync, openFolder }\r\n)(FileDirectory)\r\n\r\nexport { FileDirectory }","E:\\Gitee\\file-view\\src\\components\\FileList.js",[],"E:\\Gitee\\file-view\\src\\components\\File.js",["76"],"E:\\Gitee\\file-view\\src\\redux\\store.js",[],"E:\\Gitee\\file-view\\src\\redux\\reducers.js",[],"E:\\Gitee\\file-view\\src\\redux\\action-types.js",[],"E:\\Gitee\\file-view\\src\\redux\\actions.js",["77"],"import * as req from '../api/api'\r\nimport { BACK, GET_FILE_LIST, OPEN_FOLDER } from './action-types'\r\nimport { Path } from '../Path'\r\n\r\nconst ext = str => str.substr(str.lastIndexOf('.') + 1)\r\n\r\nexport const getFileList = ({ path, result }) => {\r\n  let fileTree = []\r\n  let files = []\r\n  let j = 0\r\n  for (let i = 0; i < result.length; i++) {\r\n    let { name, type } = result[i]\r\n    files[i] = {\r\n      title: name,\r\n      type: type === 'dir' ? type : ext(name)\r\n    }\r\n    if (type !== 'dir') continue\r\n    fileTree[j++] = {\r\n      title: name,\r\n      key: `${path}/${name}`,\r\n      children: [{ title: '' }]\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: GET_FILE_LIST,\r\n    data: { path, fileTree, files }\r\n  }\r\n}\r\n\r\nexport const openFolder = folder =>\r\n  ({\r\n    type: OPEN_FOLDER,\r\n    data: folder\r\n  })\r\n\r\nexport const getFileListAsync = path =>\r\n  async dispatch => {\r\n    let { result } = await req.getFileList(path)\r\n    dispatch(getFileList({ path, result }))\r\n  }\r\n\r\nexport const backAsync = p =>\r\n  async dispatch => {\r\n    let path = Path.back(p)\r\n    let { result } = await req.getFileList(path)\r\n    dispatch(getFileList({ path, result }))\r\n  }\r\n\r\n","E:\\Gitee\\file-view\\src\\api\\api.js",[],"E:\\Gitee\\file-view\\src\\api\\req.js",[],"E:\\Gitee\\file-view\\src\\Path.js",[],"E:\\Gitee\\file-view\\src\\config.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":20},{"ruleId":"82","severity":1,"message":"86","line":6,"column":10,"nodeType":"84","messageId":"85","endLine":6,"endColumn":14},{"ruleId":"82","severity":1,"message":"87","line":7,"column":10,"nodeType":"84","messageId":"85","endLine":7,"endColumn":17},{"ruleId":"82","severity":1,"message":"88","line":8,"column":7,"nodeType":"84","messageId":"85","endLine":8,"endColumn":12},{"ruleId":"82","severity":1,"message":"89","line":5,"column":3,"nodeType":"84","messageId":"85","endLine":5,"endColumn":20},{"ruleId":"82","severity":1,"message":"90","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":14},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'Breadcrumb' is defined but never used.","Identifier","unusedVar","'Path' is defined but never used.","'convert' is defined but never used.","'count' is assigned a value but never used.","'FileImageOutlined' is defined but never used.","'BACK' is defined but never used.","no-global-assign","no-unsafe-negation"]